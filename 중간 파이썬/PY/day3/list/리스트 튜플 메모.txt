list (순서가 보장되는특별한 봉투)
 
리스트는 [] (대괄호)를 쓴다.
값 수정이 가능하다.

내장 자료형 리스트~

my_list =['오예스','몽쉘','초코파이']
my_list =['오예스','몽쉘','초코파이','초코파이] #중복이 가능하다
my_list =['오예스','몽쉘','초코파이',1,2,3,bd] #아무 자료형이나 막 넣을 수 있다.
my_list =[] #빈 리스트 생성


my_list =['오예스','몽쉘','초코파이'] #리스트 추가,삭제 하기 가능

my_list.append('빅파이')
print(my_list)
=>[오예스,몽쉘,초코파이,빅파이]

my_list.remove('빅파이')
print(my_list)
=>[오예스,몽쉘,초코파이]

tot_list=['아','이','스']
sum_list=['크','림']


sum_list.extend(tot_list) #리스트 확장
print(sum_list)
=>['크', '림', '아', '이', '스']
----------------------------------------------
tot_list.extend(sum_list) #리스트 확장
print(my_list)
=>['아', '이', '스', '크', '림']


=================================
tuple 1
튜플은 () (소괄호)를 쓴다.
값 수정이 불가능 하다.

my_tuple =('오예스','몽쉘','초코파이') 

print(len(my_tuple)) #값의 개수 확인가능
=> 3
print('몽쉘' in my_tuple) #포함여부 알기가능
=> True
print(my_tuple[0:2]) #슬라이싱 가능
=> 오예스, 몽쉘
print(my_tuple[0]) #순서가 보장된다.
=> 오예스
#count(), index()


===================================
tuple 2

my_tuple =('오예스', '몽쉘', '초코파이') #패킹
(pie1, pie2, pie3) = my_tuple #언패킹 변수에 값을 집어넣음

numbers = (1,2,3,4,5,6,7,8,9,10)

(one, two, *others) = numbers
#one[1] two[2] others[3,4,5,6,7,8,9,10]*리스트 형태임* 이 들어가게 된다.

(*others, nine, ten) = numbers
#others[1,2,3,4,5,6,7,8]*리스트 형태임* nine[9] ten[10] 이 들어가게 된다.

*을 중간에 넣을 수 도 있다.

numbers = ('1','2','3','4','5','6','7','8','9','10')

(one, two, *others) = numbers

print(one)
print(two)
print(others)
print(numbers)

=> 1
     2
     ['3', '4', '5', '6', '7', '8', '9', '10'] #리스트 형태
     ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10') #튜플 형태



 